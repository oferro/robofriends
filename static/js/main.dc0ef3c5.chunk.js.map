{"version":3,"sources":["components/Card.js","components/CardList.js","components/SerchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SerchBox","serchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSerchChange","event","setState","serchfield","target","value","state","fetch","then","Response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACG,sBAAKC,UAAY,mDAAjB,UACK,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,WCgBLI,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAMC,GACf,OACI,cAAC,EAAD,CAEIV,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHPO,EAAKT,UCKvBW,EAbE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACf,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,QACLC,YAAY,eACZC,SAAYH,OCCbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YC0CJC,G,wDAvCX,aAAe,IAAD,8BACV,gBAaJC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,WAAYF,EAAMG,OAAOC,SAbxC,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,WAAY,IAJN,E,qDAQd,WAAsB,IAAD,OACjBI,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACnB,OAAQ4B,S,oBAO1C,WACI,MAA6BC,KAAKN,MAA3BvB,EAAP,EAAOA,OAAQoB,EAAf,EAAeA,WACTU,EAAiB9B,EAAO+B,QAAO,SAAAC,GAC7B,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASd,EAAWa,kBAG5D,OAAQjC,EAAOmC,OAIP,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAUS,YAAawB,KAAKZ,gBAC5B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ8B,SAP9B,iD,GA1BMM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc0ef3c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n       <div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map ((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={user.id}\r\n                            id={user.id}\r\n                            name={user.name}\r\n                            email={user.email}\r\n                            />\r\n                    );\r\n                }              \r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SerchBox = ({serchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='serch'\r\n                placeholder='serch robots'\r\n                onChange = {serchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SerchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SerchBox from '../components/SerchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component  {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            serchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.cypress.io/users')\r\n        .then(Response => Response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSerchChange = (event) => {\r\n        this.setState({serchfield: event.target.value}) \r\n    }\r\n\r\n    render() {\r\n        const {robots, serchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n                return robot.name.toLowerCase().includes(serchfield.toLowerCase());\r\n            });\r\n            \r\n        return !robots.length ?\r\n            <h1>Loading ...</h1>\r\n            :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SerchBox serchChange={this.onSerchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}